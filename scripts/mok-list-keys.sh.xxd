00000000: 2321 2f75 7372 2f62 696e 2f65 6e76 2062  #!/usr/bin/env b
00000010: 6173 680a 7365 7420 2d65 756f 2070 6970  ash.set -euo pip
00000020: 6566 6169 6c0a 6364 2022 2428 6469 726e  efail.cd "$(dirn
00000030: 616d 6520 2224 3022 292f 2e2e 220a 0a23  ame "$0")/.."..#
00000040: 204c 6973 7420 4d4f 4b20 6365 7274 732f   List MOK certs/
00000050: 6b65 7973 2061 6e64 2073 686f 7720 656e  keys and show en
00000060: 726f 6c6c 6d65 6e74 2073 7461 7475 732e  rollment status.
00000070: 0a23 2055 7361 6765 3a20 6d6f 6b2d 6c69  .# Usage: mok-li
00000080: 7374 2d6b 6579 732e 7368 0a23 2053 6361  st-keys.sh.# Sca
00000090: 6e73 206f 7574 2f6b 6579 732f 6d6f 6b20  ns out/keys/mok 
000000a0: 286e 6577 206c 6179 6f75 7429 2061 6e64  (new layout) and
000000b0: 206c 6567 6163 7920 6f75 742f 6b65 7973   legacy out/keys
000000c0: 2066 6f72 2063 6f6d 7061 7469 6269 6c69   for compatibili
000000d0: 7479 2e0a 0a4d 4f4b 5f44 4952 3d22 6f75  ty...MOK_DIR="ou
000000e0: 742f 6b65 7973 2f6d 6f6b 220a 4c45 4741  t/keys/mok".LEGA
000000f0: 4359 5f44 4952 3d22 6f75 742f 6b65 7973  CY_DIR="out/keys
00000100: 220a 0a6c 6973 745f 6365 7274 7328 2920  "..list_certs() 
00000110: 7b0a 2020 2320 5072 6566 6572 206e 6577  {.  # Prefer new
00000120: 206c 6179 6f75 743b 2069 6e63 6c75 6465   layout; include
00000130: 206c 6567 6163 7920 6173 2066 616c 6c62   legacy as fallb
00000140: 6163 6b0a 2020 6966 205b 202d 6420 2224  ack.  if [ -d "$
00000150: 4d4f 4b5f 4449 5222 205d 3b20 7468 656e  MOK_DIR" ]; then
00000160: 0a20 2020 2066 696e 6420 2224 4d4f 4b5f  .    find "$MOK_
00000170: 4449 5222 202d 6d61 7864 6570 7468 2032  DIR" -maxdepth 2
00000180: 202d 7479 7065 2066 205c 2820 2d6e 616d   -type f \( -nam
00000190: 6520 272a 2e63 7274 2720 2d6f 202d 6e61  e '*.crt' -o -na
000001a0: 6d65 2027 2a2e 7065 6d27 202d 6f20 2d6e  me '*.pem' -o -n
000001b0: 616d 6520 272a 2e63 6572 2720 2d6f 202d  ame '*.cer' -o -
000001c0: 6e61 6d65 2027 2a2e 6465 7227 205c 290a  name '*.der' \).
000001d0: 2020 6669 0a20 2069 6620 5b20 2d64 2022    fi.  if [ -d "
000001e0: 244c 4547 4143 595f 4449 5222 205d 3b20  $LEGACY_DIR" ]; 
000001f0: 7468 656e 0a20 2020 2066 696e 6420 2224  then.    find "$
00000200: 4c45 4741 4359 5f44 4952 2220 2d6d 6178  LEGACY_DIR" -max
00000210: 6465 7074 6820 3120 2d74 7970 6520 6620  depth 1 -type f 
00000220: 5c28 202d 6e61 6d65 2027 2a2e 6372 7427  \( -name '*.crt'
00000230: 202d 6f20 2d6e 616d 6520 272a 2e70 656d   -o -name '*.pem
00000240: 2720 2d6f 202d 6e61 6d65 2027 2a2e 6365  ' -o -name '*.ce
00000250: 7227 202d 6f20 2d6e 616d 6520 272a 2e64  r' -o -name '*.d
00000260: 6572 2720 5c29 0a20 2066 690a 7d0a 0a73  er' \).  fi.}..s
00000270: 6861 315f 6670 2829 207b 0a20 206c 6f63  ha1_fp() {.  loc
00000280: 616c 2066 3d22 2431 220a 2020 6361 7365  al f="$1".  case
00000290: 2022 247b 6623 232a 2e7d 2220 696e 0a20   "${f##*.}" in. 
000002a0: 2020 2064 6572 7c63 6572 2920 6f70 656e     der|cer) open
000002b0: 7373 6c20 7835 3039 202d 696e 666f 726d  ssl x509 -inform
000002c0: 2044 4552 202d 696e 2022 2466 2220 2d6e   DER -in "$f" -n
000002d0: 6f6f 7574 202d 6669 6e67 6572 7072 696e  oout -fingerprin
000002e0: 7420 2d73 6861 3120 323e 2f64 6576 2f6e  t -sha1 2>/dev/n
000002f0: 756c 6c20 7c20 7365 6420 2773 2f5e 5348  ull | sed 's/^SH
00000300: 4131 2046 696e 6765 7270 7269 6e74 3d2f  A1 Fingerprint=/
00000310: 2f27 207c 2074 7220 275b 3a6c 6f77 6572  /' | tr '[:lower
00000320: 3a5d 2720 275b 3a75 7070 6572 3a5d 2720  :]' '[:upper:]' 
00000330: 3b3b 0a20 2020 2063 7274 7c70 656d 2920  ;;.    crt|pem) 
00000340: 6f70 656e 7373 6c20 7835 3039 202d 696e  openssl x509 -in
00000350: 2022 2466 2220 2d6e 6f6f 7574 202d 6669   "$f" -noout -fi
00000360: 6e67 6572 7072 696e 7420 2d73 6861 3120  ngerprint -sha1 
00000370: 323e 2f64 6576 2f6e 756c 6c20 7c20 7365  2>/dev/null | se
00000380: 6420 2773 2f5e 5348 4131 2046 696e 6765  d 's/^SHA1 Finge
00000390: 7270 7269 6e74 3d2f 2f27 207c 2074 7220  rprint=//' | tr 
000003a0: 275b 3a6c 6f77 6572 3a5d 2720 275b 3a75  '[:lower:]' '[:u
000003b0: 7070 6572 3a5d 2720 3b3b 0a20 2020 202a  pper:]' ;;.    *
000003c0: 2920 7265 7475 726e 2031 203b 3b0a 2020  ) return 1 ;;.  
000003d0: 6573 6163 0a7d 0a0a 6973 5f65 6e72 6f6c  esac.}..is_enrol
000003e0: 6c65 6428 2920 7b0a 2020 6c6f 6361 6c20  led() {.  local 
000003f0: 6670 3d22 2431 220a 2020 7375 646f 206d  fp="$1".  sudo m
00000400: 6f6b 7574 696c 202d 2d6c 6973 742d 656e  okutil --list-en
00000410: 726f 6c6c 6564 2032 3e2f 6465 762f 6e75  rolled 2>/dev/nu
00000420: 6c6c 207c 2074 7220 275b 3a6c 6f77 6572  ll | tr '[:lower
00000430: 3a5d 2720 275b 3a75 7070 6572 3a5d 2720  :]' '[:upper:]' 
00000440: 7c20 6772 6570 202d 7120 2224 6670 220a  | grep -q "$fp".
00000450: 7d0a 0a68 6173 5f6b 6579 2829 207b 0a20  }..has_key() {. 
00000460: 206c 6f63 616c 2063 6572 743d 2224 3122   local cert="$1"
00000470: 0a20 206c 6f63 616c 2062 6173 653d 2224  .  local base="$
00000480: 7b63 6572 7425 2e2a 7d22 0a20 205b 202d  {cert%.*}".  [ -
00000490: 6620 2224 6261 7365 2e6b 6579 2220 5d20  f "$base.key" ] 
000004a0: 7c7c 205b 202d 6620 2224 7b62 6173 6525  || [ -f "${base%
000004b0: 252e 6372 747d 2e6b 6579 2220 5d0a 7d0a  %.crt}.key" ].}.
000004c0: 0a70 7269 6e74 6620 2225 2d34 7320 252d  .printf "%-4s %-
000004d0: 3973 2025 2d39 7320 252d 3432 7320 2573  9s %-9s %-42s %s
000004e0: 5c6e 2220 2223 2220 2245 4e52 4f4c 4c45  \n" "#" "ENROLLE
000004f0: 4422 2022 4b45 5922 2022 4649 4e47 4552  D" "KEY" "FINGER
00000500: 5052 494e 5428 5348 4131 2922 2022 4345  PRINT(SHA1)" "CE
00000510: 5254 220a 6964 783d 300a 7768 696c 6520  RT".idx=0.while 
00000520: 4946 533d 2072 6561 6420 2d72 2063 6572  IFS= read -r cer
00000530: 743b 2064 6f0a 2020 5b20 2d6e 2022 2463  t; do.  [ -n "$c
00000540: 6572 7422 205d 207c 7c20 636f 6e74 696e  ert" ] || contin
00000550: 7565 0a20 2066 703d 2428 7368 6131 5f66  ue.  fp=$(sha1_f
00000560: 7020 2224 6365 7274 2220 7c7c 2074 7275  p "$cert" || tru
00000570: 6529 0a20 205b 202d 6e20 2224 6670 2220  e).  [ -n "$fp" 
00000580: 5d20 7c7c 2063 6f6e 7469 6e75 650a 2020  ] || continue.  
00000590: 6964 783d 2428 2869 6478 2b31 2929 0a20  idx=$((idx+1)). 
000005a0: 2069 6620 6973 5f65 6e72 6f6c 6c65 6420   if is_enrolled 
000005b0: 2224 6670 223b 2074 6865 6e20 653d 2259  "$fp"; then e="Y
000005c0: 4553 223b 2065 6c73 6520 653d 226e 6f22  ES"; else e="no"
000005d0: 3b20 6669 0a20 2069 6620 6861 735f 6b65  ; fi.  if has_ke
000005e0: 7920 2224 6365 7274 223b 2074 6865 6e20  y "$cert"; then 
000005f0: 6b3d 2259 4553 223b 2065 6c73 6520 6b3d  k="YES"; else k=
00000600: 226e 6f22 3b20 6669 0a20 2073 656c 3d22  "no"; fi.  sel="
00000610: 220a 2020 6966 205b 2022 247b 4b4d 4f44  ".  if [ "${KMOD
00000620: 5f43 4552 543a 2d7d 2220 3d20 2224 6365  _CERT:-}" = "$ce
00000630: 7274 2220 5d3b 2074 6865 6e20 7365 6c3d  rt" ]; then sel=
00000640: 222a 223b 2066 690a 2020 7072 696e 7466  "*"; fi.  printf
00000650: 2022 252d 3473 2025 2d39 7320 252d 3973   "%-4s %-9s %-9s
00000660: 2025 2d34 3273 2025 7325 735c 6e22 2022   %-42s %s%s\n" "
00000670: 2469 6478 2220 2224 6522 2022 246b 2220  $idx" "$e" "$k" 
00000680: 2224 6670 2220 2224 6365 7274 2220 2224  "$fp" "$cert" "$
00000690: 7365 6c22 0a20 2065 7661 6c20 2243 4552  sel".  eval "CER
000006a0: 545f 2469 6478 3d5c 2224 6365 7274 5c22  T_$idx=\"$cert\"
000006b0: 220a 646f 6e65 203c 203c 286c 6973 745f  ".done < <(list_
000006c0: 6365 7274 7320 323e 2f64 6576 2f6e 756c  certs 2>/dev/nul
000006d0: 6c29 0a0a 6966 205b 2022 2469 6478 2220  l)..if [ "$idx" 
000006e0: 3d20 3020 5d3b 2074 6865 6e0a 2020 6563  = 0 ]; then.  ec
000006f0: 686f 2022 284e 6f20 6361 6e64 6964 6174  ho "(No candidat
00000700: 6520 4d4f 4b20 6365 7274 6966 6963 6174  e MOK certificat
00000710: 6573 2066 6f75 6e64 2075 6e64 6572 2024  es found under $
00000720: 4d4f 4b5f 4449 5220 6f72 2024 4c45 4741  MOK_DIR or $LEGA
00000730: 4359 5f44 4952 2922 0a20 2065 7869 7420  CY_DIR)".  exit 
00000740: 300a 6669 0a0a 6563 686f 0a69 6620 5b20  0.fi..echo.if [ 
00000750: 2d6e 2022 247b 4b4d 4f44 5f43 4552 543a  -n "${KMOD_CERT:
00000760: 2d7d 2220 5d3b 2074 6865 6e0a 2020 6563  -}" ]; then.  ec
00000770: 686f 2022 5365 6c65 6374 6564 3a20 4b4d  ho "Selected: KM
00000780: 4f44 5f43 4552 543d 244b 4d4f 445f 4345  OD_CERT=$KMOD_CE
00000790: 5254 220a 2020 5b20 2d6e 2022 247b 4b4d  RT".  [ -n "${KM
000007a0: 4f44 5f4b 4559 3a2d 7d22 205d 2026 2620  OD_KEY:-}" ] && 
000007b0: 6563 686f 2022 2020 2020 2020 2020 2020  echo "          
000007c0: 4b4d 4f44 5f4b 4559 3d24 4b4d 4f44 5f4b  KMOD_KEY=$KMOD_K
000007d0: 4559 2220 7c7c 2074 7275 650a 6669 0a    EY" || true.fi.
