00000000: 2321 2f75 7372 2f62 696e 2f65 6e76 2062  #!/usr/bin/env b
00000010: 6173 680a 7365 7420 2d65 756f 2070 6970  ash.set -euo pip
00000020: 6566 6169 6c0a 6364 2022 2428 6469 726e  efail.cd "$(dirn
00000030: 616d 6520 2224 3022 292f 2e2e 220a 0a23  ame "$0")/.."..#
00000040: 2049 6e74 6572 6163 7469 7665 206f 7220   Interactive or 
00000050: 656e 762d 6472 6976 656e 2073 656c 6563  env-driven selec
00000060: 7469 6f6e 206f 6620 6120 4d4f 4b20 6365  tion of a MOK ce
00000070: 7274 2b6b 6579 2066 6f72 206d 6f64 756c  rt+key for modul
00000080: 6520 7369 676e 696e 672e 0a23 2055 7361  e signing..# Usa
00000090: 6765 3a0a 2320 2020 4e6f 6e2d 696e 7465  ge:.#   Non-inte
000000a0: 7261 6374 6976 6520 2870 7265 6665 7272  ractive (preferr
000000b0: 6564 293a 2073 6574 204b 4d4f 445f 4345  ed): set KMOD_CE
000000c0: 5254 2f4b 4d4f 445f 4b45 592c 2074 6865  RT/KMOD_KEY, the
000000d0: 6e20 7275 6e20 7468 6973 2074 6f20 7665  n run this to ve
000000e0: 7269 6679 0a23 2020 2049 6e74 6572 6163  rify.#   Interac
000000f0: 7469 7665 3a20 7275 6e20 7769 7468 206e  tive: run with n
00000100: 6f20 656e 763b 2070 6963 6b20 616e 2065  o env; pick an e
00000110: 6e72 6f6c 6c65 6420 6365 7274 2074 6861  nrolled cert tha
00000120: 7420 6861 7320 6120 6d61 7463 6869 6e67  t has a matching
00000130: 206b 6579 0a23 204f 7574 7075 743a 0a23   key.# Output:.#
00000140: 2020 2050 7269 6e74 7320 6065 7870 6f72     Prints `expor
00000150: 7420 4b4d 4f44 5f43 4552 543d 2e2e 2e60  t KMOD_CERT=...`
00000160: 2061 6e64 2060 6578 706f 7274 204b 4d4f   and `export KMO
00000170: 445f 4b45 593d 2e2e 2e60 206f 6e20 7374  D_KEY=...` on st
00000180: 646f 7574 0a0a 4d4f 4b5f 4449 523d 226f  dout..MOK_DIR="o
00000190: 7574 2f6b 6579 732f 6d6f 6b22 0a4c 4547  ut/keys/mok".LEG
000001a0: 4143 595f 4449 523d 226f 7574 2f6b 6579  ACY_DIR="out/key
000001b0: 7322 0a0a 6c69 7374 5f70 6169 7273 2829  s"..list_pairs()
000001c0: 207b 0a20 2023 2059 6965 6c64 206c 696e   {.  # Yield lin
000001d0: 6573 3a20 4345 5254 5f50 4154 487c 4b45  es: CERT_PATH|KE
000001e0: 595f 5041 5448 7c45 4e52 4f4c 4c45 4428  Y_PATH|ENROLLED(
000001f0: 592f 4e29 7c53 4841 310a 2020 7363 616e  Y/N)|SHA1.  scan
00000200: 5f64 6972 2829 207b 0a20 2020 206c 6f63  _dir() {.    loc
00000210: 616c 2064 3d22 2431 220a 2020 2020 5b20  al d="$1".    [ 
00000220: 2d64 2022 2464 2220 5d20 7c7c 2072 6574  -d "$d" ] || ret
00000230: 7572 6e20 300a 2020 2020 6669 6e64 2022  urn 0.    find "
00000240: 2464 2220 2d6d 6178 6465 7074 6820 3220  $d" -maxdepth 2 
00000250: 2d74 7970 6520 6620 5c28 202d 6e61 6d65  -type f \( -name
00000260: 2027 2a2e 6372 7427 202d 6f20 2d6e 616d   '*.crt' -o -nam
00000270: 6520 272a 2e70 656d 2720 2d6f 202d 6e61  e '*.pem' -o -na
00000280: 6d65 2027 2a2e 6365 7227 202d 6f20 2d6e  me '*.cer' -o -n
00000290: 616d 6520 272a 2e64 6572 2720 5c29 207c  ame '*.der' \) |
000002a0: 2077 6869 6c65 2072 6561 6420 2d72 2063   while read -r c
000002b0: 6572 743b 2064 6f0a 2020 2020 2020 6c6f  ert; do.      lo
000002c0: 6361 6c20 6261 7365 3d22 247b 6365 7274  cal base="${cert
000002d0: 252e 2a7d 220a 2020 2020 2020 6c6f 6361  %.*}".      loca
000002e0: 6c20 6b65 793d 2222 0a20 2020 2020 2066  l key="".      f
000002f0: 6f72 206b 2069 6e20 2224 6261 7365 2e6b  or k in "$base.k
00000300: 6579 2220 2224 7b62 6173 6525 252e 6372  ey" "${base%%.cr
00000310: 747d 2e6b 6579 223b 2064 6f0a 2020 2020  t}.key"; do.    
00000320: 2020 2020 5b20 2d66 2022 246b 2220 5d20      [ -f "$k" ] 
00000330: 2626 207b 206b 6579 3d22 246b 223b 2062  && { key="$k"; b
00000340: 7265 616b 3b20 7d0a 2020 2020 2020 646f  reak; }.      do
00000350: 6e65 0a20 2020 2020 205b 202d 6e20 2224  ne.      [ -n "$
00000360: 6b65 7922 205d 207c 7c20 636f 6e74 696e  key" ] || contin
00000370: 7565 0a20 2020 2020 206c 6f63 616c 2066  ue.      local f
00000380: 700a 2020 2020 2020 6361 7365 2022 247b  p.      case "${
00000390: 6365 7274 2323 2a2e 7d22 2069 6e0a 2020  cert##*.}" in.  
000003a0: 2020 2020 2020 6465 727c 6365 7229 2066        der|cer) f
000003b0: 703d 2428 6f70 656e 7373 6c20 7835 3039  p=$(openssl x509
000003c0: 202d 696e 666f 726d 2044 4552 202d 696e   -inform DER -in
000003d0: 2022 2463 6572 7422 202d 6e6f 6f75 7420   "$cert" -noout 
000003e0: 2d66 696e 6765 7270 7269 6e74 202d 7368  -fingerprint -sh
000003f0: 6131 2032 3e2f 6465 762f 6e75 6c6c 207c  a1 2>/dev/null |
00000400: 2073 6564 2027 732f 5e53 4841 3120 4669   sed 's/^SHA1 Fi
00000410: 6e67 6572 7072 696e 743d 2f2f 2720 7c20  ngerprint=//' | 
00000420: 7472 2027 5b3a 6c6f 7765 723a 5d27 2027  tr '[:lower:]' '
00000430: 5b3a 7570 7065 723a 5d27 293b 3b0a 2020  [:upper:]');;.  
00000440: 2020 2020 2020 6372 747c 7065 6d29 2066        crt|pem) f
00000450: 703d 2428 6f70 656e 7373 6c20 7835 3039  p=$(openssl x509
00000460: 202d 696e 2022 2463 6572 7422 202d 6e6f   -in "$cert" -no
00000470: 6f75 7420 2d66 696e 6765 7270 7269 6e74  out -fingerprint
00000480: 202d 7368 6131 2032 3e2f 6465 762f 6e75   -sha1 2>/dev/nu
00000490: 6c6c 207c 2073 6564 2027 732f 5e53 4841  ll | sed 's/^SHA
000004a0: 3120 4669 6e67 6572 7072 696e 743d 2f2f  1 Fingerprint=//
000004b0: 2720 7c20 7472 2027 5b3a 6c6f 7765 723a  ' | tr '[:lower:
000004c0: 5d27 2027 5b3a 7570 7065 723a 5d27 293b  ]' '[:upper:]');
000004d0: 3b0a 2020 2020 2020 2020 2a29 2066 703d  ;.        *) fp=
000004e0: 2222 3b3b 0a20 2020 2020 2065 7361 630a  "";;.      esac.
000004f0: 2020 2020 2020 5b20 2d6e 2022 2466 7022        [ -n "$fp"
00000500: 205d 207c 7c20 636f 6e74 696e 7565 0a20   ] || continue. 
00000510: 2020 2020 2069 6620 7375 646f 206d 6f6b       if sudo mok
00000520: 7574 696c 202d 2d6c 6973 742d 656e 726f  util --list-enro
00000530: 6c6c 6564 2032 3e2f 6465 762f 6e75 6c6c  lled 2>/dev/null
00000540: 207c 2074 7220 275b 3a6c 6f77 6572 3a5d   | tr '[:lower:]
00000550: 2720 275b 3a75 7070 6572 3a5d 2720 7c20  ' '[:upper:]' | 
00000560: 6772 6570 202d 7120 2224 6670 223b 2074  grep -q "$fp"; t
00000570: 6865 6e0a 2020 2020 2020 2020 6563 686f  hen.        echo
00000580: 2022 2463 6572 747c 246b 6579 7c59 7c24   "$cert|$key|Y|$
00000590: 6670 220a 2020 2020 2020 656c 7365 0a20  fp".      else. 
000005a0: 2020 2020 2020 2065 6368 6f20 2224 6365         echo "$ce
000005b0: 7274 7c24 6b65 797c 4e7c 2466 7022 0a20  rt|$key|N|$fp". 
000005c0: 2020 2020 2066 690a 2020 2020 646f 6e65       fi.    done
000005d0: 0a20 207d 0a20 2073 6361 6e5f 6469 7220  .  }.  scan_dir 
000005e0: 2224 4d4f 4b5f 4449 5222 0a20 2073 6361  "$MOK_DIR".  sca
000005f0: 6e5f 6469 7220 2224 4c45 4741 4359 5f44  n_dir "$LEGACY_D
00000600: 4952 220a 7d0a 0a23 2049 6620 656e 7620  IR".}..# If env 
00000610: 6973 2061 6c72 6561 6479 2073 6574 2061  is already set a
00000620: 6e64 2076 616c 6964 2c20 6a75 7374 2065  nd valid, just e
00000630: 6368 6f20 6578 706f 7274 7320 616e 6420  cho exports and 
00000640: 6578 6974 2030 0a69 6620 5b20 2d6e 2022  exit 0.if [ -n "
00000650: 247b 4b4d 4f44 5f43 4552 543a 2d7d 2220  ${KMOD_CERT:-}" 
00000660: 5d20 2626 205b 202d 6e20 2224 7b4b 4d4f  ] && [ -n "${KMO
00000670: 445f 4b45 593a 2d7d 2220 5d20 2626 205b  D_KEY:-}" ] && [
00000680: 202d 6620 2224 4b4d 4f44 5f43 4552 5422   -f "$KMOD_CERT"
00000690: 205d 2026 2620 5b20 2d66 2022 244b 4d4f   ] && [ -f "$KMO
000006a0: 445f 4b45 5922 205d 3b20 7468 656e 0a20  D_KEY" ]; then. 
000006b0: 2065 6368 6f20 2265 7870 6f72 7420 4b4d   echo "export KM
000006c0: 4f44 5f43 4552 543d 244b 4d4f 445f 4345  OD_CERT=$KMOD_CE
000006d0: 5254 220a 2020 6563 686f 2022 6578 706f  RT".  echo "expo
000006e0: 7274 204b 4d4f 445f 4b45 593d 244b 4d4f  rt KMOD_KEY=$KMO
000006f0: 445f 4b45 5922 0a20 2065 7869 7420 300a  D_KEY".  exit 0.
00000700: 6669 0a0a 2320 4275 696c 6420 6120 6c69  fi..# Build a li
00000710: 7374 0a6d 6170 6669 6c65 202d 7420 4954  st.mapfile -t IT
00000720: 454d 5320 3c20 3c28 6c69 7374 5f70 6169  EMS < <(list_pai
00000730: 7273 290a 6966 205b 2022 247b 2349 5445  rs).if [ "${#ITE
00000740: 4d53 5b40 5d7d 2220 2d65 7120 3020 5d3b  MS[@]}" -eq 0 ];
00000750: 2074 6865 6e0a 2020 6563 686f 2022 4e6f   then.  echo "No
00000760: 204d 4f4b 2063 6572 742b 6b65 7920 7061   MOK cert+key pa
00000770: 6972 7320 666f 756e 6420 756e 6465 7220  irs found under 
00000780: 244d 4f4b 5f44 4952 206f 7220 244c 4547  $MOK_DIR or $LEG
00000790: 4143 595f 4449 5222 203e 2632 0a20 2065  ACY_DIR" >&2.  e
000007a0: 7869 7420 310a 6669 0a0a 2320 5072 6566  xit 1.fi..# Pref
000007b0: 6572 2074 6865 2066 6972 7374 2065 6e72  er the first enr
000007c0: 6f6c 6c65 6420 7061 6972 2069 6620 6e6f  olled pair if no
000007d0: 6e2d 696e 7465 7261 6374 6976 650a 666f  n-interactive.fo
000007e0: 7220 6c69 6e65 2069 6e20 2224 7b49 5445  r line in "${ITE
000007f0: 4d53 5b40 5d7d 223b 2064 6f0a 2020 4946  MS[@]}"; do.  IF
00000800: 533d 277c 2720 7265 6164 202d 7220 6365  S='|' read -r ce
00000810: 7274 206b 6579 2065 6e72 6f6c 6c65 6420  rt key enrolled 
00000820: 6670 203c 3c3c 2224 6c69 6e65 220a 2020  fp <<<"$line".  
00000830: 6966 205b 2022 2465 6e72 6f6c 6c65 6422  if [ "$enrolled"
00000840: 203d 2022 5922 205d 3b20 7468 656e 0a20   = "Y" ]; then. 
00000850: 2020 2065 6368 6f20 2265 7870 6f72 7420     echo "export 
00000860: 4b4d 4f44 5f43 4552 543d 2463 6572 7422  KMOD_CERT=$cert"
00000870: 0a20 2020 2065 6368 6f20 2265 7870 6f72  .    echo "expor
00000880: 7420 4b4d 4f44 5f4b 4559 3d24 6b65 7922  t KMOD_KEY=$key"
00000890: 0a20 2020 2065 7869 7420 300a 2020 6669  .    exit 0.  fi
000008a0: 0a64 6f6e 650a 0a23 2049 6620 6e6f 6e65  .done..# If none
000008b0: 2065 6e72 6f6c 6c65 642c 2066 616c 6c20   enrolled, fall 
000008c0: 6261 636b 2074 6f20 6669 7273 7420 7061  back to first pa
000008d0: 6972 2061 6e64 2077 6172 6e0a 4946 533d  ir and warn.IFS=
000008e0: 277c 2720 7265 6164 202d 7220 6365 7274  '|' read -r cert
000008f0: 206b 6579 2065 6e72 6f6c 6c65 6420 6670   key enrolled fp
00000900: 203c 3c3c 2224 7b49 5445 4d53 5b30 5d7d   <<<"${ITEMS[0]}
00000910: 220a 6563 686f 2022 5761 726e 696e 673a  ".echo "Warning:
00000920: 2073 656c 6563 7465 6420 6365 7274 2069   selected cert i
00000930: 7320 6e6f 7420 656e 726f 6c6c 6564 2028  s not enrolled (
00000940: 5348 4131 3d24 6670 292e 204b 6572 6e65  SHA1=$fp). Kerne
00000950: 6c20 6d61 7920 7265 6a65 6374 2073 6967  l may reject sig
00000960: 6e65 6420 6d6f 6475 6c65 732e 2220 3e26  ned modules." >&
00000970: 320a 6563 686f 2022 6578 706f 7274 204b  2.echo "export K
00000980: 4d4f 445f 4345 5254 3d24 6365 7274 220a  MOD_CERT=$cert".
00000990: 6563 686f 2022 6578 706f 7274 204b 4d4f  echo "export KMO
000009a0: 445f 4b45 593d 246b 6579 220a            D_KEY=$key".
